/*
 * AndFHEM - Open Source Android application to control a FHEM home automation
 * server.
 *
 * Copyright (c) 2011, Matthias Klass or third-party contributors as
 * indicated by the @author tags or express copyright attribution
 * statements applied by the authors.  All third-party contributions are
 * distributed under license by Red Hat Inc.
 *
 * This copyrighted material is made available to anyone wishing to use, modify,
 * copy, or redistribute it subject to the terms and conditions of the GNU GENERAL PUBLIC LICENSE, as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU GENERAL PUBLIC LICENSE
 * for more details.
 *
 * You should have received a copy of the GNU GENERAL PUBLIC LICENSE
 * along with this distribution; if not, write to:
 *   Free Software Foundation, Inc.
 *   51 Franklin Street, Fifth Floor
 *   Boston, MA  02110-1301  USA
 */

ext {
    newReleaseVersion = "dummy"
}

static def getVersionCode(project) {
    return Integer.parseInt(project.getVersion()
            .replaceAll("\\.", "")
            .replaceAll("-SNAPSHOT", "")
            .replaceAll("-BETA", ""))
}

static def getNextVersionCode(project) {
    def versionCode = getVersionCode(project)
    return project.getVersion().endsWith("-SNAPSHOT") ? versionCode : versionCode + 1
}

static def getNextVersion(project) {
    def nextCode = String.valueOf(getNextVersionCode(project))
    def rev = nextCode.charAt(nextCode.length() - 1)
    def minor = nextCode.charAt(nextCode.length() - 2)
    def major = nextCode.substring(0, nextCode.length() - 2)
    return "$major.$minor.$rev"
}

play {
    userFraction = 1.0
}

release {
    buildTasks = ['generateWhatsNew', 'build', 'uploadToPlayStore', 'githubRelease']
    versionPropertyFile = '../gradle.properties'
    versionProperties = ['version']
    failOnSnapshotDependencies = false
    // this is a temporary workround until version 3.0 is released, so that the plugin can be moved to the root project

    versionPatterns = [
            /.*/: { matcher, project -> newReleaseVersion }
    ]

    git {
        requireBranch = 'master'
        pushToRemote = 'origin'
    }
}

task releaseBeta {
    play.track = 'beta'
    ext.newReleaseVersion = getNextVersion(project) + "-BETA"
}

releaseBeta.dependsOn(release)
task releaseProd {
    play.track = 'production'
    ext.newReleaseVersion = getNextVersion(project)
    afterReleaseBuild.dependsOn("resetWhatsNew")
}
releaseBeta.dependsOn(release)

task uploadToPlayStore
uploadToPlayStore.dependsOn {
    tasks.findAll { it.name.startsWith('publish') && it.name.endsWith("Release") }
}

task deleteGitTag(type: Exec) {
    commandLine 'git', 'tag', '-d', newReleaseVersion
    ignoreExitValue true
}
tasks.findAll { it.name.contains("createReleaseTag") }
        .forEach { it.dependsOn deleteGitTag }
